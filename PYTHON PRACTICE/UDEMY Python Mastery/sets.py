#SETS

my_set = {1, 2, 3, 4, 5, 6, 7}
your_set = {4, 5, 6, 7, 8, 9, 10}

print(my_set.difference(your_set)) #returns the elements that are in the my_set set but are not present in the your_set set (does not modify the original set)
print(my_set)

my_set.discard(7) #removes the stated value from the set
print(my_set)

# my_set.difference_update(your_set) # this returns the difference and also modifies the original set
# print(my_set)

print(my_set.intersection(your_set)) # returns the elementd that are present in both sets given

print(my_set.isdisjoint(your_set)) # checks if the two sets have nothing in common

print(my_set.union(your_set)) # union unites sets together and removes any duplicates
# Union can also be done as show below:
print(my_set | your_set)

print(my_set.issubset(your_set)) # checks if my_set is a subset of your_set e.g if my_set is {4,5} and your_set is {2,3,4,5,6} then it will return true
print(your_set.issuperset(my_set)) # using previous explanation and reversing it. i.e your_set is a superset of my_set


# EXERCISE
# You are working for the school Principal. We have a database of school students:
school = {'Bobby','Tammy','Jammy','Sally','Danny'}

#during class, the teachers take attendance and compile it into a list. 
attendance_list = ['Jammy', 'Bobby', 'Danny', 'Sally']

print(school.difference(attendance_list))
#using what you learned about sets, create a piece of code that the school principal can use to immediately find out who missed class so they can call the parents. (Imagine if the list had 1000s of students. The principal can use the lists generated by the teachers + the school database to use python and make his/her job easier): Find the students that miss class!